/*
	task-list.css - styles for the TaskList component
	- Provides layout, spacing and card-style visual for the TaskList area.
	- Includes a raised card wrapper and header to distinguish the task area.
	- Adjusted widths so the list and form expand to the available app width.
	- Completed-state styling is available if `.completed` is added to the
		`.task-title` element inside `task-item.html`.
*/


/* Tasks container without scroll - shows all tasks */
.tasks-container {
	width: 100%;
	overflow: hidden; /* Prevent tasks from overflowing container */
}

.task-row {
	width: 100% !important;
	min-width: 0;
	word-wrap: break-word;
	overflow-wrap: break-word;
}

/* Location dropdown z-index */
.location-dropdown {
	z-index: 1000;
}

/* Cursor pointer for clickable elements */
.cursor-pointer {
	cursor: pointer;
}

/* Bootstrap override - remove default padding that conflicts with our layout */
.task-list-card.card {
	padding: 0 !important;
	width: 100%;
	max-width: 100%;
}

.task-form {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.form-row {
	display: flex;
	gap: 0.5rem;
	width: 100%;
}

.task-input {
	/* ensure input expands to available width */
	flex: 1 1 auto;
	min-width: 0;
	padding: 0.5rem;
	border: 1px solid #e6e6e6;
	border-radius: 6px;
}

.task-textarea {
	width: 100%;
	min-height: 48px;
	padding: 0.5rem;
	border: 1px solid #f0f0f0;
	border-radius: 6px;
	box-sizing: border-box;
}

.btn-add {
	padding: 0.45rem 0.75rem;
	background: #1976d2;
	color: #fff;
	border: none;
	border-radius: 6px;
	cursor: pointer;
}

.tasks {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.task-row {
	padding: 0.5rem;
	border-radius: 8px;
	background: #fafafa;
	border: 1px solid #f2f2f2;
	box-sizing: border-box;
	width: 100%; /* Ensure all task rows take full container width */
}

/* Overdue task row styling - Highlights the entire task row in orange */
.task-row.overdue-row,

#overdueTaskRow {
	background-color: #ff8c0045 !important; /* Full orange background for entire row */
	box-shadow: 0 2px 8px rgba(255, 140, 0, 0.4) !important; /* Orange glow effect */
	padding: 0.75rem !important; /* Extra padding for prominence */
}

/* Override text colors within overdue rows for visibility */
.task-row.overdue-row .task-title,
#overdueTaskRow .task-title {
	color: #ffffff !important; /* White text on orange background */
	font-weight: 600 !important; /* Bold for better readability */
}

.task-row.overdue-row .task-description,
#overdueTaskRow .task-description {
	color: #fff8f0 !important; /* Light cream text for description */
}

.task-row.overdue-row .task-due-display,
#overdueTaskRow .task-due-display {
	color: #000000 !important; /* White text for due date */
	font-weight: 800 !important;
}

.task-meta {
	display: flex;
	align-items: flex-start;
	padding-top: 0.25rem; /* slight offset to align with text */
}

.task-meta input[type="checkbox"] {
	width: 18px;
	height: 18px;
}

.task-actions {
	margin-left: auto;
	display: flex;
	align-items: flex-start;
	padding-top: 0.25rem; /* align with checkbox */
}

/* Due date styles (form + per-item) */
.due-label {
	align-self: center;
	margin-right: 0.5rem;
	color: var(--gray-700);
}

.task-due-display {
	font-size: 0.9rem;
	color: var(--gray-700);
}

.task-due {
	padding: 0.35rem 0.5rem;
	border: 1px solid #e6e6e6;
	border-radius: 6px;
}

.task-due-row {
	margin-top: 0.5rem;
	display: flex;
	gap: 0.5rem;
	align-items: center;
}

.task-due-input {
	padding: 0.25rem;
	border-radius: 6px;
	border: 1px solid #e6e6e6;
}

.btn-remove {
	background: transparent;
	border: none;
	font-size: 1.2rem;
	color: #b00020;
	cursor: pointer;
}

.btn-edit {
	background: transparent;
	border: none;
	font-size: 1rem;
	color: #1976d2;
	cursor: pointer;
	margin-right: 0.5rem;
}

.btn-edit:hover {
	opacity: 0.7;
}

/* Task item styles with consistent width */
.task-item {
	flex: 1;
	min-width: 0; /* allows flex item to shrink below its content size */
	overflow: hidden; /* prevents content from overflowing container */
	word-wrap: break-word;
	overflow-wrap: break-word;
	max-width: 100%;
}

/* Edit mode styles */
.edit-mode {
	flex: 1;
	min-width: 0; /* same as regular .task-item */
	overflow: hidden; /* same as regular .task-item */
}

.edit-task-form {
	width: 100%;
	margin-bottom: 0;
	max-width: 100%; /* prevent form from expanding beyond container */
	box-sizing: border-box;
}

.edit-actions {
	display: flex;
	gap: 0.5rem;
	margin-top: 0.5rem;
}

.btn-save {
	padding: 0.4rem 0.8rem;
	background: #4caf50;
	color: white;
	border: none;
	border-radius: 4px;
	cursor: pointer;
	font-size: 0.9rem;
}

.btn-save:hover {
	background: #45a049;
}

.btn-cancel {
	padding: 0.4rem 0.8rem;
	background: #f44336;
	color: white;
	border: none;
	border-radius: 4px;
	cursor: pointer;
	font-size: 0.9rem;
}

.btn-cancel:hover {
	background: #da190b;
}

/* Example completed-state rule:
	 If you add `class="completed"` to the .task-title inside task-item.html
	 (e.g. <h3 class="task-title" [class.completed]="task.completed">), this
	 rule will visually mark completed items.
*/
.task-title.completed {
	text-decoration: line-through;
	color: #9aa0a6;
}

/* Screen reader only text - visually hidden but accessible to screen readers */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* Character counter styles */
.char-counter {
	font-size: 0.75rem;
	color: var(--gray-500, #666);
	margin-top: 0.25rem;
	text-align: right;
}

.char-counter.warning {
	color: #f57c00;
}

.char-counter.danger {
	color: #d32f2f;
}

/* Filter button styles (used in task-list filter bar) */
.filter-bar.compact {
	display: flex;
	gap: 0.5rem;
	margin-bottom: 0.75rem;
}

/* Left-aligned filter toggle inside the form */
.filter-toggle-left {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	margin-right: 0.5rem;
}

.filter-toggle-left .filter-bar {
	margin-top: 0.5rem;
}

.filter-btn {
	padding: 0.35rem 0.6rem;
	border-radius: 6px;
	font-size: 0.95rem;
}

.filter-btn.active {
	background: #1976d2;
	color: #fff;
}

.filter-btn:hover {
	background-color: #aeb8f1;
}

/* Location input and autocomplete styles */
.location-input-container {
	position: relative;
	width: 100%;
}

.location-input {
	width: 100%;
	padding: 0.5rem;
	border: 1px solid #e6e6e6;
	border-radius: 6px;
	box-sizing: border-box;
}

.location-suggestions {
	position: absolute;
	top: 100%;
	left: 0;
	right: 0;
	background: white;
	border: 1px solid #e6e6e6;
	border-top: none;
	border-radius: 0 0 6px 6px;
	max-height: 200px;
	overflow-y: auto;
	z-index: 1000;
	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.suggestion-item {
	padding: 0.75rem;
	cursor: pointer;
	border-bottom: 1px solid #f0f0f0;
	font-size: 0.9rem;
	color: #333;
	transition: background-color 0.2s;
}

.suggestion-item:hover {
	background-color: #f8f9fa;
}

.suggestion-item:last-child {
	border-bottom: none;
}


/* Set minimum width for task rows on larger screens */
@media (min-width: 768px) {
	.task-row {
		min-width: 400px;
	}
	
	.task-list-card.card {
		min-width: 400px;
	}
}

/* Set minimum width for task rows on larger screens */
@media (min-width: 1024px) {
	.task-row {
		min-width: 600px;
	}
	
	.task-list-card.card {
		min-width: 600px;
	}
}