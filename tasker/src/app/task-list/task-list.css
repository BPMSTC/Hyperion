/*
	task-list.css - styles for the TaskList component
	- Provides layout, spacing and card-style visual for the TaskList area.
	- Includes a raised card wrapper and header to distinguish the task area.
	- Adjusted widths so the list and form expand to the available app width.
	- Completed-state styling is available if `.completed` is added to the
		`.task-title` element inside `task-item.html`.
*/

.task-list-wrapper {
	/* Increase default wrapper width and ensure it fills the app content */
	max-width: 1000px;
	width: 100%;
	margin: 0 auto;
	padding: 1rem;
	position: relative; /* Enable absolute positioning for child elements */
}

/* Raised card that contains header, form and list */
.task-list-card {
	background: #ffffff;
	border-radius: 10px;
	padding: 1rem 1rem 1.25rem 1rem;
	box-shadow: 0 6px 18px rgba(12, 24, 40, 0.08);
	border: 1px solid rgba(12,24,40,0.04);
}

.task-list-header {
	margin-bottom: 0.75rem;
	display: flex;
	flex-direction: column;
	gap: 0.25rem;
}

.task-list-title {
	margin: 0;
	font-size: 1.25rem;
	color: var(--gray-900);
}

.task-list-subtitle {
	margin: 0;
	color: var(--gray-700);
	font-size: 0.95rem;
}

/* Demo button styling - positioned in top right corner */
.btn-demo {
	position: absolute;
	top: 2rem;
	right: 2rem;
	padding: 0.5rem 1rem;
	background: #6c757d;
	color: white;
	border: none;
	border-radius: 6px;
	cursor: pointer;
	font-size: 0.9rem;
	transition: background-color 0.2s ease;
	z-index: 100; /* Ensure it stays above other content */
}

.btn-demo:hover {
	background: #5a6268;
}

.task-form {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	margin-bottom: 0.75rem;
}

.form-row {
	display: flex;
	gap: 0.5rem;
	width: 100%;
}

.task-input {
	/* ensure input expands to available width */
	flex: 1 1 auto;
	min-width: 0;
	padding: 0.5rem;
	border: 1px solid #e6e6e6;
	border-radius: 6px;
}

.task-textarea {
	width: 100%;
	min-height: 48px;
	padding: 0.5rem;
	border: 1px solid #f0f0f0;
	border-radius: 6px;
	box-sizing: border-box;
}

.btn-add {
	padding: 0.45rem 0.75rem;
	background: #1976d2;
	color: #fff;
	border: none;
	border-radius: 6px;
	cursor: pointer;
}

.tasks {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.task-row {
	display: flex;
	align-items: flex-start; /* changed from center to flex-start */
	gap: 0.75rem;
	padding: 0.5rem;
	border-radius: 8px;
	background: #fafafa;
	border: 1px solid #f2f2f2;
	/* allow children to grow; prevent row from shrinking to content */
	width: 100%;
	max-width: 100%; /* ensure row doesn't expand beyond container */
	box-sizing: border-box;
}

/* Overdue task row styling - Highlights the entire task row in orange */
.task-row.overdue-row,
#overdueTaskRow {
	background-color: #ff8c00 !important; /* Full orange background for entire row */
	border: 2px solid #cc5500 !important; /* Dark orange border */
	box-shadow: 0 2px 8px rgba(255, 140, 0, 0.4) !important; /* Orange glow effect */
	padding: 0.75rem !important; /* Extra padding for prominence */
}

/* Override text colors within overdue rows for visibility */
.task-row.overdue-row .task-title,
#overdueTaskRow .task-title {
	color: #ffffff !important; /* White text on orange background */
	font-weight: 600 !important; /* Bold for better readability */
}

.task-row.overdue-row .task-description,
#overdueTaskRow .task-description {
	color: #fff8f0 !important; /* Light cream text for description */
}

.task-row.overdue-row .task-due-display,
#overdueTaskRow .task-due-display {
	color: #ffffff !important; /* White text for due date */
	font-weight: 500 !important;
}

.task-meta {
	display: flex;
	align-items: flex-start;
	padding-top: 0.25rem; /* slight offset to align with text */
}

.task-meta input[type="checkbox"] {
	width: 18px;
	height: 18px;
}

.task-actions {
	margin-left: auto;
	display: flex;
	align-items: flex-start;
	padding-top: 0.25rem; /* align with checkbox */
}

/* Due date styles (form + per-item) */
.due-label {
	align-self: center;
	margin-right: 0.5rem;
	color: var(--gray-700);
}

.task-due {
	padding: 0.35rem 0.5rem;
	border: 1px solid #e6e6e6;
	border-radius: 6px;
}

.task-due-row {
	margin-top: 0.5rem;
	display: flex;
	gap: 0.5rem;
	align-items: center;
}

.task-due-input {
	padding: 0.25rem;
	border-radius: 6px;
	border: 1px solid #e6e6e6;
}

.task-due-display {
	font-size: 0.9rem;
	color: var(--gray-700);
}

.btn-remove {
	background: transparent;
	border: none;
	font-size: 1.2rem;
	color: #b00020;
	cursor: pointer;
}

.btn-edit {
	background: transparent;
	border: none;
	font-size: 1rem;
	color: #1976d2;
	cursor: pointer;
	margin-right: 0.5rem;
}

.btn-edit:hover {
	opacity: 0.7;
}

/* Task item styles */
.task-item {
	flex: 1;
	min-width: 0; /* allows flex item to shrink below its content size */
	overflow: hidden; /* prevents content from overflowing container */
}

/* Edit mode styles */
.edit-mode {
	flex: 1;
	min-width: 0; /* same as regular .task-item */
	overflow: hidden; /* same as regular .task-item */
}

.edit-task-form {
	width: 100%;
	margin-bottom: 0;
	max-width: 100%; /* prevent form from expanding beyond container */
	box-sizing: border-box;
}

.edit-actions {
	display: flex;
	gap: 0.5rem;
	margin-top: 0.5rem;
}

.btn-save {
	padding: 0.4rem 0.8rem;
	background: #4caf50;
	color: white;
	border: none;
	border-radius: 4px;
	cursor: pointer;
	font-size: 0.9rem;
}

.btn-save:hover {
	background: #45a049;
}

.btn-cancel {
	padding: 0.4rem 0.8rem;
	background: #f44336;
	color: white;
	border: none;
	border-radius: 4px;
	cursor: pointer;
	font-size: 0.9rem;
}

.btn-cancel:hover {
	background: #da190b;
}

/* Example completed-state rule:
	 If you add `class="completed"` to the .task-title inside task-item.html
	 (e.g. <h3 class="task-title" [class.completed]="task.completed">), this
	 rule will visually mark completed items.
*/
.task-title.completed {
	text-decoration: line-through;
	color: #9aa0a6;
}

/* Screen reader only text - visually hidden but accessible to screen readers */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* Character counter styles */
.char-counter {
	font-size: 0.75rem;
	color: var(--gray-500, #666);
	margin-top: 0.25rem;
	text-align: right;

.char-counter.warning {
	color: #f57c00;
}

.char-counter.danger {
	color: #d32f2f;
}

}